{
    "collab_server" : "",
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nserver <- function(input, output, session) {\n  \n  showModal(modalDialog(\n    title = h2(\"Texas Imperlied Species Research Prioritization\"),\n    p(\"This interactive app demonstrates a framework developed by Defenders of Wildlife\n      to help the Texas comptrollers office prioritize research projects, guiding a user through\n      three key components:\"),\n    tags$ol(\n      tags$li(\"Explicitly defining the conservation objectives\"),\n      tags$li(\"Ranking species based on these objectives\"),\n      tags$li(\"Scoring projects to maximize return  on investment\")\n      ),\n    p(\"Begin by choosing a prioritiztion scheme, which will re-rank the imperiled species in Texas.\n    Then select a hypothetical study species and click 'Next' to proceed.\"),\n    easyClose = TRUE\n  ))\n  \n  rv <- reactiveValues(page = 1)\n  \n  observe({\n    shinyjs::toggleState(id = \"prevBtn\", condition = (rv$page > 1))\n    shinyjs::toggleState(id = \"nextBtn\", condition = (rv$page < NUM_PAGES) & length(input$rankedtable_rows_selected)>0)\n    shinyjs::hide(selector = \".row\")\n    shinyjs::show(\"actionButtons\")\n    shinyjs::show(paste0(\"step\", rv$page))\n    shinyjs::show(paste0(\"panel\", rv$page, \"a\"))\n    shinyjs::show(paste0(\"panel\", rv$page, \"b\"))\n  })\n  \n  \n  navPage <- function(direction) {\n    rv$page <- rv$page + direction\n  }\n  \n  observeEvent(input$prevBtn, navPage(-1))\n  observeEvent(input$nextBtn, navPage(1))\n  \n  makedf <- function(criteria){\n    dplyr::select(TX_species, scientific_name, group, federal_status, rpn, global_rank_2, total_exp, Area)%>%\n      dplyr::arrange_(criteria)%>%\n      dplyr::mutate(Rank = seq(nrow(TX_species)), Weight = 1/c(rep(1:10, each = nrow(TX_species)%/%10), rep(10, nrow(TX_species)%%10)))%>%\n      dplyr::arrange(scientific_name)\n  }\n  \n  \n  df <- reactive({makedf(input$value)})\n  \n  output$rankedtable <- renderDataTable(datatable(df(), selection = 'multiple',\n                                        colnames = c(\"Species\",\n                                                    \"Taxa\",\n                                                     \"Federal Status\",\n                                                     \"TX Status\",\n                                                     \"Global Rank\",\n                                                     \"Expenditures\",\n                                                     \"Range Size (ac)\",\n                                                     \"Rank\",\n                                                     \"Weight\")\n                                        )%>%formatCurrency('total_exp')\n  )\n  \n  spec <- reactive({df()[input$rankedtable_rows_selected, 'scientific_name']})\n  weight <- reactive({df()[input$rankedtable_rows_selected, 'Weight']})\n  output$proposed <- renderPrint({cat(\"Does the proposed research on \", spec(), \"...\",sep = \"\")})\n  \n  score <- reactive({\n    sum(\n      as.numeric(input$outstanding),\n      as.numeric(input$estimates),\n      as.numeric(input$threats),\n      as.numeric(input$demographics),\n      as.numeric(input$extinction),\n      as.numeric(input$actions)\n    )\n  })\n  \n  rescore <- reactive({rescale(log(score()*weight()), to = c(0,1), from = c(0, log(max(possible$score))))})\n  \n  output$histo <- renderPlotly({\n    plot_ly()%>%\n      add_trace(type = 'scatter', mode = 'lines',\n                x = ~c(rescore(), rescore()),\n                y = c(0,500),\n                name = 'Current Project')%>%\n      add_trace(type = 'histogram', data = possible,\n                x = ~rescale(log(score), c(0,1)), name = 'All Possible')%>%\n      layout(legend = list(x = 0.7, y = 1),\n             xaxis = list(title = \"Project Score\"),\n             title = \"Project ranking (Spp. weight * Research score)\")\n  })\n  \n  output$score <- renderPrint({cat(\"Total Research Score:\", score()[1]/10, sep = \" \")})\n}\n",
    "created" : 1514907091340.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3392144807",
    "id" : "17CA5CA5",
    "lastKnownWriteTime" : 1514924114,
    "last_content_update" : 1514924114261,
    "path" : "C:/Users/mevans/repos/TX_priorities/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}